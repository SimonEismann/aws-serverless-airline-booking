AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs10.x
    Timeout: 10
    Tracing: Active

Parameters:
  CorsOrigin:
    Type: String
    Default: "'*'"
    Description: (Optional) Cross-origin resource sharing (CORS) Origin. You can specify a single origin, all "*" or leave empty and no CORS will be applied.
    MaxLength: 250
  SSMParameterPath1:
    Type: String
    Default: 'lambda-stripe-charge/stripe-secret-key1'
    Description: >
      This component assumes the Stripe Secret key needed to use the Stripe Charge API is stored as SecureStrings in SSM Parameter Store under the path defined by
      this parameter. See the component README for details.
    AllowedPattern: ^[0-9a-zA-Z-][0-9a-zA-Z-\/]+
    ConstraintDescription: 'Must start with a slash and alphanumeric characters (exclude the starting slash)'
  SSMParameterPath2:
    Type: String
    Default: 'lambda-stripe-charge/stripe-secret-key2'
    Description: >
      This component assumes the Stripe Secret key needed to use the Stripe Charge API is stored as SecureStrings in SSM Parameter Store under the path defined by
      this parameter. See the component README for details.
    AllowedPattern: ^[0-9a-zA-Z-][0-9a-zA-Z-\/]+
    ConstraintDescription: 'Must start with a slash and alphanumeric characters (exclude the starting slash)'
  EnableInstantCapture:
    Type: String
    AllowedValues: [true, false]
    Default: false
    Description: To immediatelly capture a payment upon charge, if true it means on charge you collect the amount, if false, you need to do a capture.
Conditions:
  ShouldEnableCapture: !Equals [true, !Ref EnableInstantCapture]
Resources:
  ChargeStripeApiWebhook:
    Type: AWS::Serverless::Api
    Properties:
      Cors:
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: !Ref CorsOrigin
        MaxAge: "'3600'"
        AllowMethods: "'OPTIONS,POST'"
      EndpointConfiguration: REGIONAL
      StageName: prod
      TracingEnabled: true
  CreateStripeCharge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: charge.handler
      Policies:
        - SNSCrudPolicy:
            TopicName: !GetAtt SNSTopic.TopicName
        - SSMParameterReadPolicy:
            ParameterName: !Ref SSMParameterPath1
            ParameterName: !Ref SSMParameterPath2
      Environment:
        Variables:
          IS_CORS: IsCorsDefined
          CORS_ORIGIN: !Ref CorsOrigin
          SSM_PARAMETER_PATH1: !Ref SSMParameterPath1
          SSM_PARAMETER_PATH2: !Ref SSMParameterPath2
          TOPIC_ARN: !Ref SNSTopic
          IS_CAPTURE: !Ref EnableInstantCapture
      Events:
        Api:
          Type: Api
          Properties:
            Path: /charge
            Method: POST
            RestApiId: !Ref ChargeStripeApiWebhook
  CaptureStripeCharge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: capture.handler
      Policies:
        - SNSCrudPolicy:
            TopicName: !GetAtt SNSTopic.TopicName
        - SSMParameterReadPolicy:
            ParameterName: !Ref SSMParameterPath1
            ParameterName: !Ref SSMParameterPath2
      Environment:
        Variables:
          IS_CORS: IsCorsDefined
          CORS_ORIGIN: !Ref CorsOrigin
          SSM_PARAMETER_PATH1: !Ref SSMParameterPath1
          SSM_PARAMETER_PATH2: !Ref SSMParameterPath2
          TOPIC_ARN: !Ref SNSTopic
      Events:
        Api:
          Type: Api
          Properties:
            Path: /capture
            Method: POST
            RestApiId: !Ref ChargeStripeApiWebhook
  CreateRefund:
    Type: AWS::Serverless::Function
    Properties:
      Handler: refund.handler
      Policies:
        - SNSCrudPolicy:
            TopicName: !GetAtt SNSTopic.TopicName
        - SSMParameterReadPolicy:
            ParameterName: !Ref SSMParameterPath1
            ParameterName: !Ref SSMParameterPath2
      Environment:
        Variables:
          IS_CORS: IsCorsDefined
          CORS_ORIGIN: !Ref CorsOrigin
          SSM_PARAMETER_PATH1: !Ref SSMParameterPath1
          SSM_PARAMETER_PATH2: !Ref SSMParameterPath2
          TOPIC_ARN: !Ref SNSTopic
      Events:
        Api:
          Type: Api
          Properties:
            Path: /refund
            Method: POST
            RestApiId: !Ref ChargeStripeApiWebhook
  SNSTopic:
    Type: AWS::SNS::Topic
Outputs:
  ChargeApiUrl:
    Value: !Sub https://${ChargeStripeApiWebhook}.execute-api.${AWS::Region}.amazonaws.com/prod/charge
    Description: The URL of the API Gateway you provide to Stripe as a webhook it invokes to CREATE a charge based on its token.
    Export:
      Name: ChargeApiUrl
  CaptureApiUrl:
    Value: !Sub https://${ChargeStripeApiWebhook}.execute-api.${AWS::Region}.amazonaws.com/prod/capture
    Description: The URL of the API Gateway you provide to Stripe as a webhook it invokes to CAPTURE a charge based on its token.
    Export:
      Name: CaptureApiUrl
  RefundApiUrl:
    Value: !Sub https://${ChargeStripeApiWebhook}.execute-api.${AWS::Region}.amazonaws.com/prod/refund
    Description: The URL of the API Gateway you provide to Stripe as a webhook it invokes to CAPTURE a charge based on its token.
    Export:
      Name: RefundApiUrl
  SNSTopic:
    Value: !Ref SNSTopic
    Description: The SNS topic your Stripe Lambda is notifying to
    Export:
      Name: SNSTopic
